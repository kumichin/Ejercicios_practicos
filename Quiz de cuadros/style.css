
:root{
    --marron-oscuro: #71443f;
    --marron-claro: #8c7c62;
    --azul-verdoso: #9dc19d;
    --verdoso-claro: #b5cea4;
    --beige-opaco: #d3d5b0;

}

*{
   margin: 0;
   padding: 0;
   box-sizing: border-box;
}

body{
    background-color: var(--beige-opaco);
}

header{
    background-color: rgba(22, 7, 7, 0.774);
    min-height: 60vh;
    display: flex;
    flex-direction: column;
    
}

.hero{
  align-items: center;
}

h1{
    color: var(--azul-verdoso);
    font-family: "Dancing Script";
    font-size: 5rem;
    font-weight: 600;
    display: flex;
    margin: 10vw 30vw 4vw 1vw;
    padding-left: .2vw;
   

}
span{
  padding: 1vw;
  font-family: "Caveat", cursive;
  font-size: 2rem;
  color: var(--marron-oscuro);
  font-weight: bold;
}

.circle{
  margin-right: 2vw;
  margin-top: 6vw;
  background-color: var(--marron-claro);
  border-radius: 60%;
  border: .3vw solid #9dc19d;
  width: 6vw;
  height: 6vw;
  /* animation */
  animation-name: animate__animated animate__bounce;
  /* controla cuando tarda en ejecutarse la animación */
  animation-duration: 6s;
  /* controla lo que dura el ciclo de animación */
  animation-iteration-count: infinite;
  /* controla que ocurre cuando la animacion llega al 100% */
  animation-direction: alternate;
  /* controla lo que ocurre antes y despues de que
  /* forrwards, se queda con los estilos de su estado del 100%, backwards, se queda con los estilos del principio de la animación
  el 0%.  */
  animation-fill-mode: both; 
  /* este es necesario para que la propiedad backwards anterior se pueda apreciar.
  esto lo que hace es que define un tiempo de espera para que la animacion se ejecute */
  animation-delay: 2s;
  /* define la curva de aceleracion de la animacion, es decir la velocidad de la animacion*/
  animation-timing-function: ease;
  /* tb se puede hacer la version corta poniendo en animation todas las propiedades juntas sin nombrarlas en ese caso
  los primeros segundos que ponga seran la duracion y el 2º tiempo sera en delay*/
} 
  
 .circle:hover{
  /* denota el comportamiento de la animacion cuando se pasa el raton, por defecto es running pero si lo pongo en paused
  cuando pase el raton por encima se para */
  animation-play-state: paused;
}

/* @keyframes cambioColor{
  /* se puede usar porcentajes pero si pongo from y to es lo mismo, from es 0% y to es 100% 
  0%{
    background-color: var(--beige-opaco);
  }
  100{
    background-color: var(--verdoso-claro)
  }
 }*/ 
 /* esto seria una simple animacion de cambio de color*/

/*@keyframes cambioColor{
  0%{
    background-color: var(--verdoso-claro);
    transform: translateX(0%, 0%);
  }
  25%{
    background-color: var(--azul-verdoso);
    transform: translateX(25%);

  }
  50%{
    background-color: var(--beige-opaco);
    transform: translateX(50%, 75%);

  }
  75%{
    background-color: var(--marron-claro);
    transform: translateX(75%, 25%);

  }
  100%{
    /* en este caso de translate pasaria lo mismo, lo puedo poner corto en plan
    translate (x, y)  en lugar de translate x y translate y
    background-color: var(--marron-oscuro);
    transform: translateX(100%, 100%);
  }
 } */

h2{
  font-family: "Caveat", cursive;
  font-size: 3rem;
  font-optical-sizing: auto;
  font-style: normal;
  margin: 3vw 5vw;
  color: var(--marron-oscuro);
}

h3{
  font-family: "Caveat", cursive;
  font-size: 1.7rem;
  font-optical-sizing: auto;
  font-style: normal;
  margin: 3vw 5vw;
  color: var(--marron-oscuro);
}
div{
    
    justify-content: center;
    display: flex;
    flex-wrap: nowrap;
    margin: .5vw;
}

.cuadro{

  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
}

img{
    width: 200px;
    height: 250px;
    border: 4px solid var(--marron-oscuro);
    border-radius: 4%;
    margin: 2vw;
}

a{
  text-decoration: none;
}

a p{
  margin-left: 2vw;
  margin-top: .2vw;
  margin-bottom: .2vw;
  font-family: "Caveat", cursive;
  font-size: 1.6rem;
  font-weight: bold;
  color: rgba(34, 7, 2, 0);

}


footer{
    background-color: var(--verdoso-claro);
    margin-bottom: 0;
    padding: 2vw;
    display: flex;
    justify-content: center;
}

.modal {
    display: none;
  }
  
  .modal:target {
    
    display: block;
    position: fixed;
    background: rgba(22, 7, 7, 0.89);
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  .modal h3 {
    color: #fff;
    font-size: 30px;
    text-align: center;
    margin: 15px 0;
    font-family: "Dancing Script";
  }
  
  .imagen {
    width: 100%;
    height: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  
  .imagen a {
    color: var(--verdoso-claro);
    font-size: 40px;
    text-decoration: none;
    margin: 0 10px;
    font-weight: 900;
  }
  
  .imagen a:nth-child(2) {
    margin: 0;
    height: 100%;
    flex-shrink: 2;
  }
  
  .imagen img {
    width: 500px;
    height: 120%;
    max-width: 100%;
    border: 7px solid var(--marron-oscuro);
    box-sizing: border-box;
  }
  
  .cerrar {
    display: block;
    background: var(--beige-opaco);
    width: 25px;
    height: 25px;
    margin: 100px auto;
    text-align: center;
    text-decoration: none;
    font-size: 25px;
    color: var(--marron-oscuro);
    padding: 5px;
    border-radius: 50%;
    line-height: 25px;
  }

p:hover{
  color: rgb(39, 8, 2);
  transition: 1.5s;
}

footer p{
  font-family: "Caveat", cursive;
  font-size: 1.6rem;
  font-weight: bold;
  color: var(--marron-oscuro);
}

